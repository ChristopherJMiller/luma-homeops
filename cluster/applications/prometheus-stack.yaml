---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kube-prometheus-stack
  namespace: argo-cd
spec:
  project: default
  source:
    repoURL: https://prometheus-community.github.io/helm-charts
    targetRevision: 65.1.x
    chart: kube-prometheus-stack
    helm:
      releaseName: prometheus
      valuesObject:
        defaultRules:
          create: true
          rules:
            alertmanager: true
            etcd: true
            configReloaders: true
            general: true
            k8s: true
            kubeApiserverAvailability: true
            kubeApiserverBurnrate: true
            kubeApiserverHistogram: true
            kubeApiserverSlos: true
            kubelet: true
            kubeProxy: true
            kubePrometheusGeneral: true
            kubePrometheusNodeRecording: true
            kubernetesApps: true
            kubernetesResources: true
            kubernetesStorage: true
            kubernetesSystem: true
            kubeScheduler: true
            kubeStateMetrics: true
            network: true
            node: true
            nodeExporterAlerting: true
            nodeExporterRecording: true
            prometheus: true
            prometheusOperator: true
        alertmanager:
          alertmanagerSpec:
            storage:
              volumeClaimTemplate:
                spec:
                  storageClassName: rook-ceph-block
                  accessModes: [ReadWriteOnce]
                  resources:
                    requests:
                      storage: 5Gi
            secrets:
              - discord-webhook
            configMaps:
              - alertmanager-config
        prometheusOperator:
          resources:
            limits:
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 100Mi
          livenessProbe:
            timeoutSeconds: 10
          readinessProbe:
            timeoutSeconds: 10
        prometheus:
          podDisruptionBudget:
            enabled: true
          prometheusSpec:
            replicas: 1
            resources:
              requests:
                cpu: 200m
                memory: 4Gi
              limits:
                memory: 4Gi
            ruleSelector:
              matchLabels:
                prometheus: kube-prometheus
                role: alert-rules
            ruleNamespaceSelector:
              matchLabels:
                kubernetes.io/metadata.name: prometheus
            additionalScrapeConfigs:
              - job_name: kubernetes-pods
                kubernetes_sd_configs:
                  - role: pod
                relabel_configs:
                  - source_labels:
                      [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
                    action: keep
                    regex: true
              - job_name: vyos-snmp
                static_configs:
                  - targets: ["192.168.0.1:161"]
                metrics_path: /snmp
                params:
                  module: [if_mib]
                relabel_configs:
                  - source_labels: [__address__]
                    target_label: __param_target
                  - source_labels: [__param_target]
                    target_label: instance
                  - target_label: __address__
                    replacement: prometheus-snmp-exporter:9116
            storageSpec:
              volumeClaimTemplate:
                spec:
                  storageClassName: rook-ceph-block
                  accessModes: [ReadWriteOnce]
                  resources:
                    requests:
                      storage: 200Gi
        grafana:
          admin:
            existingSecret: "grafana-admin-secret"
            userKey: admin-user
            passwordKey: admin-password
          envFromSecret: azure-monitor-credentials
          ingress:
            enabled: true
            ingressClassName: nginx
            annotations:
              kubernetes.io/ingress.class: nginx
              external-dns.alpha.kubernetes.io/target: chrismiller.xyz
            hosts:
              - dashboard.chrismiller.xyz
            tls:
              - secretName: dashboard-tls
                hosts:
                  - dashboard.chrismiller.xyz
  destination:
    server: https://kubernetes.default.svc
    namespace: prometheus
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: true
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
      - PrunePropagationPolicy=foreground
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: dashboard-tls
  namespace: prometheus
spec:
  secretName: dashboard-tls
  issuerRef:
    kind: ClusterIssuer
    name: letsencrypt-prod
  commonName: dashboard.chrismiller.xyz
  dnsNames:
    - dashboard.chrismiller.xyz
  privateKey:
    rotationPolicy: Always
    algorithm: ECDSA
    size: 384
