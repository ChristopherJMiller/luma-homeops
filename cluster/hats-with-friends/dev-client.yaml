---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dev-client
  labels:
    app: dev-client
spec:
  replicas: 1
  revisionHistoryLimit: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  selector:
    matchLabels:
      app: dev-client
  template:
    metadata:
      namespace: ipv8
      labels:
        app: dev-client
    spec:
      securityContext:
        runAsUser: 101
        runAsGroup: 101
      volumes:
        - name: tmp
          emptyDir:
            medium: Memory
        - name: cache
          emptyDir:
            medium: Memory
      containers:
        - name: client
          image: ghcr.io/christopherjmiller/hats-with-friend-client:main
          ports:
            - containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 3
            periodSeconds: 3
          lifecycle:
            preStop:
              exec:
                command: [/usr/sbin/nginx, -s, quit]
          volumeMounts:
            - mountPath: /tmp
              name: tmp
            - mountPath: /var/cache/nginx
              name: cache
          securityContext:
            readOnlyRootFilesystem: true
            runAsUser: 101
            runAsGroup: 101
        - name: server
          image: ghcr.io/christopherjmiller/hats-with-friend-server:main
          ports:
            - containerPort: 14191
              protocol: TCP
            - containerPort: 14192
              protocol: UDP
            - containerPort: 14192
              protocol: TCP
          securityContext:
            readOnlyRootFilesystem: true
            runAsUser: 101
            runAsGroup: 101
---
apiVersion: v1
kind: Service
metadata:
  name: client
spec:
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
      name: http
  selector:
    app: client
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: client
  annotations:
    external-dns.alpha.kubernetes.io/target: hats.luma.chrismiller.xyz
    kubernetes.io/ingress.class: nginx
spec:
  tls:
    - hosts:
        - hats.luma.chrismiller.xyz
      secretName: hats-tls
  rules:
    - host: hats.luma.chrismiller.xyz
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: client
                port:
                  number: 8080
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: hats-tls
spec:
  secretName: hats-tls
  issuerRef:
    kind: ClusterIssuer
    name: letsencrypt-prod
  commonName: hats.luma.chrismiller.xyz
  dnsNames:
    - hats.luma.chrismiller.xyz
  privateKey:
    rotationPolicy: Always
    algorithm: ECDSA
    size: 384